!function(e){"use strict";e.module("angularDaumMap",[])}(window.angular),function(e,n,t){"use strict";n.module("angularDaumMap").directive("daumMap",["$timeout","$log",function(e,a){return{restrict:"E",transclude:!0,replace:!1,template:'<div class="angular-daum-map" style="width:100%;height:100%"><div class="angular-daum-map-container" style="width:100%;height:100%"></div><div ng-transclude style="display:none"></div></div>',scope:{center:"=center",level:"=level",mapTypeId:"=mapTypeId",draggable:"=draggable",events:"=events"},link:function(i,o){var r,l,u,s;return u=!1,s=!1,n.isDefined(i.level)?n.isObject(i.center)?(i.center.lat&&i.center.lng&&(i.center.latitude=i.center.lat,i.center.longitude=i.center.lng),l=n.element(o).find("div")[1],r=new t.maps.Map(l,{center:new t.maps.LatLng(i.center.latitude,i.center.longitude),level:i.level,mapTypeId:i.mapTypeId,draggable:i.draggable}),r.addControl(new t.maps.ZoomControl,t.maps.ControlPosition.RIGHT),t.maps.event.addListener(r,"dragstart",function(){u=!0,e(function(){i.$apply(function(e){null!==e.dragging&&(e.dragging=u)})})}),t.maps.event.addListener(r,"dragend",function(){u=!1,e(function(){i.$apply(function(e){null!==e.dragging&&(e.dragging=u)})})}),t.maps.event.addListener(r,"drag",function(){var n;n=r.getCenter(),e(function(){i.$apply(function(e){e.center.latitude=n.getLat(),e.center.longitude=n.getLng()})})}),t.maps.event.addListener(r,"zoom_changed",function(){i.zoom!==r.getLevel()&&e(function(){i.$apply(function(e){e.zoom=r.getLevel()})})}),t.maps.event.addListener(r,"center_changed",function(){var n;n=r.getCenter(),s||e(function(){i.$apply(function(e){u||(e.center.latitude=n.getLat(),e.center.longitude=n.getLng())})})}),n.isDefined(i.events)&&null!==i.events&&n.isArray(i.events)&&n.forEach(i.events,function(e){n.isFunction(e.handler)&&t.maps.event.addListener(r,e.name,function(){return e.handler.apply(i,[r,e.name,arguments])})}),i.$watch("center",function(e){if(!n.isObject(e))return void a.error("Invalid center for newValue: "+JSON.stringify(e));var o=new t.maps.LatLng(e.latitude,e.longitude);if(o.getLat()!==r.getCenter().getLat()||o.getLng()!==r.getCenter().getLng())return s=!0,u||(i.level===r.getLevel()?r.panTo(o):r.setCenter(o)),s=!1},!0),i.$watch("level",function(n){n!==r.getLevel()&&e(function(){r.setLevel(n)})}),void(i.map=r)):void a.error("angular-daum-maps: could not find a valid center property"):void a.error("angular-daum-maps: map level property not set")},controller:["$scope",function(e){n.extend(this,{getMap:function(){return e.map}})}]}}])}(window,window.angular,window.daum),function(e,n,t){"use strict";n.module("angularDaumMap").directive("daumMarkerLabel",["$timeout",function(e){return{restrict:"E",require:"^daumMarker",transclude:!0,replace:!0,template:'<div class="angular-daum-map-marker-label" ng-transclude></div>',link:function(a,i,o,r,l){var u,s=new t.maps.AbstractOverlay,c=r.getMarkerPosition();c.lat&&c.lng&&(c.latitude=c.lat,c.longitude=c.lng);var d,p;l(a,function(e){u=e}),s.onAdd=function(){d=n.element(s.getPanels().overlayLayer),d.append(u);var e=d.children();p=n.element(e[e.length-1])},s.onRemove=function(){p.remove()},s.draw=function(){var n=this.getProjection(),a=n.pointFromCoords(new t.maps.LatLng(c.latitude,c.longitude));p.css("whiteSpace","nowrap"),p.css("position","absolute");var i=p.width(),r=p.height();p.css("left",a.x-i/2+"px"),p.css("top",a.y+5+"px"),e(function(){i=p.width(),r=p.height(),p.css("left",a.x-i/2+"px"),p.css("top",a.y+5+"px"),"undefined"!=typeof o.zIndex&&p.css("z-index",o.zIndex)})},a.$watch(function(){return r.getMap()},function(e){s.setMap(e)}),a.$on("$destroy",function(){s.setMap(null)})}}}])}(window,window.angular,window.daum),function(e,n,t){"use strict";n.module("angularDaumMap").directive("daumMarker",function(){return{scope:{position:"=position",icon:"=icon",click:"&click",zIndex:"=zIndex",events:"=events"},restrict:"E",require:"^daumMap",transclude:!0,replace:!0,template:'<span class="angular-daum-map-marker" ng-transclude></span>',link:function(e,a,i,o){e.position.lat&&e.position.lng&&(e.position.latitude=e.position.lat,e.position.longitude=e.position.lng);var r=new t.maps.Marker({position:new t.maps.LatLng(e.position.latitude,e.position.longitude),image:e.icon?new t.maps.MarkerImage(e.icon.image,new t.maps.Size(e.icon.width,e.icon.height)):null});e.$watch(function(){return o.getMap()},function(n){r.setMap(n),e.map=n}),e.$on("$destroy",function(){r.setMap(null)}),e.$watch("position",function(){r.setPosition(new t.maps.LatLng(e.position.latitude,e.position.longitude))}),e.$watch("icon",function(e){"undefined"!=typeof e&&null!==e&&r.setImage(new t.maps.MarkerImage(e.image,new t.maps.Size(e.width,e.height)))}),e.$watch("zIndex",function(){e.zIndex&&r.setZIndex(e.zIndex)}),n.isDefined(e.events)&&null!==e.events&&n.isArray(e.events)&&n.forEach(e.events,function(o){if(n.isFunction(o.handler)){var l={scope:e,element:a,attrs:i};t.maps.event.addListener(r,o.name,function(){return o.handler.apply(e,[l,o.name,arguments])})}})},controller:["$scope",function(e){n.extend(this,{getMarkerPosition:function(){return e.position},getMap:function(){return e.map}})}]}})}(window,window.angular,window.daum),function(e,n,t){"use strict";n.module("angularDaumMap").directive("daumPolyline",function(){return{scope:{path:"=",strokeWeight:"=",strokeColor:"=",strokeOpacity:"=",fillColor:"=",fillOpacity:"=",events:"="},restrict:"E",require:"^daumMap",transclude:!1,replace:!0,template:'<span class="angular-daum-map-polyline"></span>',link:function(e,a,i,o){var r=[];n.forEach(e.path,function(e){e.lat&&e.lng&&(e.latitude=e.lat,e.longitude=e.lng),r.push(new t.maps.LatLng(e.latitude,e.longitude))});var l=new t.maps.Polyline({path:r,strokeWeight:e.strokeWeight||4,strokeColor:e.strokeColor||"#FF0000",strokeOpacity:e.strokeOpacity||.5,fillColor:e.fillColor||"#FF0000",fillOpacity:e.fillOpacity||.5});e.$watch(function(){return o.getMap()},function(n){l.setMap(n),e.map=n}),n.isDefined(e.events)&&null!==e.events&&n.isArray(e.events)&&n.forEach(e.events,function(o){if(n.isFunction(o.handler)){var r={scope:e,element:a,attrs:i};t.maps.event.addListener(l,o.name,function(){return o.handler.apply(e,[r,o.name,arguments])})}}),e.$on("$destroy",function(){l.setMap(null)})},controller:["$scope",function(e){n.extend(this,{getMap:function(){return e.map}})}]}})}(window,window.angular,window.daum);